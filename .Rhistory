3+5
x = 3+5
x+2
## I am adding 3 and 5. R is fun!
3 + 5
x + y
y <-  5
y <-  5
x + y
clear
x + y
(y)
(y)
print(y)
x <- 4
y <-  5
print(x + y)
print(x)
print(y)
cat("The second element of x is ", x[2], "\n")
print(myVector[2])
## I am creating a vector or array and printing the whole vector with another element in it
# vector start from 1 not 0
myVector <- c(1,2,3,4)
myVector
print(myVector[2])
cat("The second element of x is ", myVector[2], "\n")
source("E:/D/PHD/term6/6410/Intro-to-R/R_script.R")
source("E:/D/PHD/term6/6410/Intro-to-R/R_script.R")
## I am creating a vector or array and printing the whole vector with another element in it
# vector start from 1 not 0
myVector <- c(1,2,3,4)
cat("The second element of x is ", myVector[2], "\n")
print(x)
source("R_script.R")
source("R_script.R")
source("R_script.R")
source("R_script.R")
source("R_script.R")
plot(cars)
myVector <- c(1,2,3,4)
myVector
print(myVector[2])
cat("The second element of x is ", myVector[2], "\n")
expression <- c("low", "high", "medium", "high", "low", "medium", "high")
expression <- factor(expression)
expression
expression <- c("low", "high", "medium", "high", "low", "medium", "high")
expression <- factor(expression)
expression
levels(expression) <- c("low", "medium", "high")
expression
education <- c("high school", "bachelor's", "master's", "bachelor's", "high school")
education_factor <- factor(education, levels = c("high school", "bachelor's", "master's"))
print(education_factor)
m <- matrix(c(1, 2, 3, 4, 5, 6), nrow = 3, ncol = 2)
print(m)
shape <- dim(m)
print(shape)
- c(2, 3)
print(m)
dim(m) <- c(2, 3)
print(m)
print(m[, 2])
m2 <- cbind(m[, 2:3])
print(m2)
source("E:/D/PHD/term6/6410/Intro-to-R/R_script.R")
df <- data.frame(
name = c("Alice", "Bob", "Charlie"),
age = c(25, 30, 35),
gender = c("female", "male", "male")
)
print(df)
mylist <- list(
numeric_vector = c(1, 2, 3),
character_vector = c("a", "b", "c"),
matrix = matrix(1:6, nrow = 2),
data_frame = data.frame(x = c(1, 2, 3), y = c("a", "b", "c"))
)
print(mylist)
# if we don't assign name to each object when we are creating the list and only pass the object it will label them as 1,2,3,...
print(myList[2])
# if we don't assign name to each object when we are creating the list and only pass the object it will label them as 1,2,3,...
print(mylist[2])
print(mylist["matrix"])
source("E:/D/PHD/term6/6410/Intro-to-R/R_script.R")
source("E:/D/PHD/term6/6410/Intro-to-R/R_script.R")
sqrt(16) # the square root of a numeric value x.
exp(16) # the exponential function of a numeric value x.
log(16) # natural logarithm of a numeric value x.
log10(16) # base 10 logarithm of a numeric value x.
sin(30) # sine of an angle x (in radians). cos() tan() ....
abs(-20) # returns the absolute value of a numeric value x.
round(3.34647452, 2) # rounds the value x to the specified number of digits.
?round
args(round)
example("round")
add_numbers <- function(x, y) {
sum <- x + y
return(sum)
}
result <- add_numbers(3, 4)
add_numbers <- function(x, y) {
sum <- x + y
return(sum)
}
result <- add_numbers(3, 4)
add_numbers <- function(x, y) {
sum <- x + y
return(sum)
}
result <- add_numbers(3, 4)
result
# **************** Packages and Libraries *************************
sessionInfo()
install.packages('ggplot2') # to install packages from CRAN repository
library(ggplot2) # load the library into your R session for us
for (i in 1:5) {
print(i)
}
i <- 1
while (i <= 5) {
print(i)
i <- i + 1
}
x <- 10
if (x > 15) {
print("x is greater than 15")
} else if (x > 5) {
print("x is greater than 5 but less than or equal to 15")
} else {
print("x is less than or equal to 5")
for (i in 1:5) {
print(i)
}
i <- 1
while (i <= 5) {
print(i)
i <- i + 1
}
x <- 10
if (x > 15) {
print("x is greater than 15")
} else if (x > 5) {
print("x is greater than 5 but less than or equal to 15")
} else {
print("x is less than or equal to 5")
}
for (i in 1:5) {
print(i)
}
i <- 1
while (i <= 5) {
print(i)
i <- i + 1
}
x <- 10
if (x > 15) {
print("x is greater than 15")
} else if (x > 5) {
print("x is greater than 5 but less than or equal to 15")
} else {
print("x is less than or equal to 5")
}
for (i in 1:5) {
print(i)
}
i <- 1
while (i <= 5) {
print(i)
i <- i + 1
}
x <- 10
if (x > 15) {
print("x is greater than 15")
} else if (x > 5) {
print("x is greater than 5 but less than or equal to 15")
} else {
print("x is less than or equal to 5")
}
metadata <- read.csv(file="data/mouse_exp_design.csv")
# *********************** read data ******************************
# read_excel()
# data <- read.csv("path.csv")
metadata <- read.table()(file="data/mouse_exp_design.txt")
# *********************** read data ******************************
# read_excel()
# data <- read.csv("path.csv")
metadata <- read.table(file="data/mouse_exp_design.txt")
setClass("Rectangle", slots = list(length = "numeric", width = "numeric"))
setMethod("area", "Rectangle", function(object) {
return(object@length * object@width)
})
setClass("Rectangle", slots = list(length = "numeric", width = "numeric"))
setGeneric("area", function(object) standardGeneric("area"))
setMethod("area", "Rectangle", function(object) {
return(object@length * object@width)
})
rect1 <- new("Rectangle", length = 5, width = 3)
area(rect1)
metadata
head(metadata) # print the the first 6 lines
class(metadata)
x <- 3
x
